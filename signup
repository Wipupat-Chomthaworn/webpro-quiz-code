const bcrypt = require('bcrypt');
const { v4: uuidv4 } = require('uuid');
const pool = require('../config/db');

router.post('/signup', async (req, res, next) => {
  try {
    const { username, email, password } = req.body;

    // Check if the username or email is already used
    const checkQuery = `SELECT * FROM users WHERE username = ? OR email = ?`;
    const [checkResult] = await pool.query(checkQuery, [username, email]);
    if (checkResult.length > 0) {
      return res.status(400).json({ message: 'The username or email is already used' });
    }

    // Hash the password
    const saltRounds = 10;
    const hashedPassword = await bcrypt.hash(password, saltRounds);

    // Generate a new UUID for the user
    const uuid = uuidv4();

    // Insert the new user into the database
    const insertQuery = `
      INSERT INTO users (id, username, email, password)
      VALUES (?, ?, ?, ?)
    `;
    await pool.query(insertQuery, [uuid, username, email, hashedPassword]);

    return res.status(201).json({ message: 'User created successfully' });
  } catch (err) {
    return next(err);
  }
});
